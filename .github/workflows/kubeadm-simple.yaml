# This is a basic workflow to help you get started with Actions

name: kubeadm-simple

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Install Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '^1.19.0'
          
      - name: Build and Install Kinder
        run: |
          cd /tmp
          git clone https://github.com/SataQiu/kubeadm.git
          cd kubeadm
          git checkout my-test
          cd kinder
          go build 
          echo "/tmp/kubeadm/kinder" >> $GITHUB_PATH
      
      # Runs a set of commands using the runners shell
      - name: Build node image
        run: |
           docker pull kindest/base:v20221102-76f15095
           
           kinder build node-image-variant --base-image=kindest/base:v20221102-76f15095 --image=shidaqiu/node:test --with-init-artifacts=v1.28.2-1+a68748c7cd04f2 --with-upgrade-artifacts=v1.29.0-alpha.0.802+a68093a3ffb552 --loglevel=debug
           docker push shidaqiu/node:test
           
           # kinder create cluster --name=kinder-upgrade --image=kindest/node:test --control-plane-nodes=1 --worker-nodes=1 --loglevel=debug
           # kinder do kubeadm-init --name=kinder-upgrade --copy-certs=auto --loglevel=debug --kubeadm-verbosity=6
           # echo "---------------------------------------------"
           # echo "----Old v1.28 kubeadm generated etcd.yaml----"
           # echo "---------------------------------------------"
           # docker exec kinder-upgrade-control-plane-1  cat /etc/kubernetes/manifests/etcd.yaml
           # kinder delete cluster --name=kinder-upgrade
           
           # kinder build node-image-variant --base-image=kindest/base:v20221102-76f15095 --image=kindest/node:test --with-init-artifacts=v1.28.2-7+728862ded5e9d8 --with-upgrade-artifacts=v1.29.0-alpha.0.806+4abf29c5c86349 --loglevel=debug
           
           # kinder create cluster --name=kinder-upgrade --image=kindest/node:test --control-plane-nodes=1 --worker-nodes=1 --loglevel=debug
           # kinder do kubeadm-init --name=kinder-upgrade --copy-certs=auto --loglevel=debug --kubeadm-verbosity=6
           # echo "---------------------------------------------"
           # echo "----New v1.28 kubeadm generated etcd.yaml----"
           # echo "---------------------------------------------"
           # docker exec kinder-upgrade-control-plane-1  cat /etc/kubernetes/manifests/etcd.yaml
           # kinder delete cluster --name=kinder-upgrade
